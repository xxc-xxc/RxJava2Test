apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-android'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.xxc.rxjava2test"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testOptions {
            unitTests.returnDefaultValues = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // 黄油刀：findViewById工具库
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    // 实现异步编程库
    implementation 'io.reactivex.rxjava2:rxjava:2.2.19'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.trello.rxlifecycle4:rxlifecycle:4.0.0'

    // If you want to bind to Android-specific lifecycles
//    implementation 'com.trello.rxlifecycle4:rxlifecycle-android:4.0.0'
    // If you want pre-written Activities and Fragments you can subclass as providers
//    implementation 'com.trello.rxlifecycle4:rxlifecycle-components:4.0.0'
    // If you want pre-written support preference Fragments you can subclass as providers
//    implementation 'com.trello.rxlifecycle4:rxlifecycle-components-preference:4.0.0'
    // If you want to use Android Lifecycle for providers
//    implementation 'com.trello.rxlifecycle4:rxlifecycle-android-lifecycle:4.0.0'
    // If you want to use Kotlin syntax
//    implementation 'com.trello.rxlifecycle4:rxlifecycle-kotlin:4.0.0'
    // If you want to use Kotlin syntax with Android Lifecycle
//    implementation 'com.trello.rxlifecycle4:rxlifecycle-android-lifecycle-kotlin:4.0.0'

    implementation 'com.trello.rxlifecycle3:rxlifecycle:3.1.0'
    // If you want to bind to Android-specific lifecycles
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android:3.1.0'
    // If you want pre-written Activities and Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components:3.1.0'
    // If you want pre-written support preference Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-components-preference:3.1.0'
    // If you want to use Android Lifecycle for providers
    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle:3.1.0'
    // If you want to use Kotlin syntax
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-kotlin:3.1.0'
    // If you want to use Kotlin syntax with Android Lifecycle
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-android-lifecycle-kotlin:3.1.0'
    // If you want to use Navi for providers
    // DEPRECATED: Use rxlifecycle-android-lifecycle instead. This will be removed in a future release.
//    implementation 'com.trello.rxlifecycle3:rxlifecycle-navi:3.1.0'

    // Android平台的bindings
//    implementation 'com.jakewharton.rxbinding4:rxbinding:4.0.0'
//    // AndroidX库的bindings
//    implementation 'com.jakewharton.rxbinding4:rxbinding-core:4.0.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-appcompat:4.0.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-drawerlayout:4.0.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-leanback:4.0.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-recyclerview:4.0.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-slidingpanelayout:4.0.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-swiperefreshlayout:4.0.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-viewpager:4.0.0'
//    implementation 'com.jakewharton.rxbinding4:rxbinding-viewpager2:4.0.0'
//    // google material库的bindings
//    implementation 'com.jakewharton.rxbinding4:rxbinding-material:4.0.0'

    implementation 'com.jakewharton.rxbinding3:rxbinding:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-core:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-appcompat:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-drawerlayout:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-leanback:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-recyclerview:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-slidingpanelayout:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-swiperefreshlayout:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-viewpager:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-viewpager2:3.1.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-material:3.1.0'

    // 图片缩放
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation "androidx.core:core-ktx:1.3.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.0"

    // 圆形圆角图片
    implementation 'com.makeramen:roundedimageview:2.2.0'
    // 图片加载库
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
}
